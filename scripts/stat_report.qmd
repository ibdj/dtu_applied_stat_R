---
title: "Report for 02935 Introduction to applied statistics and R for PhD students, Winter 2025"
author: "Ida Bomholt Dyrholm Jacobsen"
subtitle: ""
format: 
  pdf:
    geometry: "top=20mm, right=20mm, bottom=20mm, left=20mm"
    documentclass: report
    #classoption: a4paper
    papersize: A4
    titlepage: true
    titlepage-theme:
      bg-image: "images/test.png"
      bg-image-size: "cover"

toc: false
---

# Summary

\tableofcontents

{{< pagebreak >}}

# Introduction

This report serves as an introduction to the use of Principal Component Analysis (PCA) in the context of ecological studies and vegetation composition analysis. PCA is a widely used method in vegetation ecology as it allows researchers to explore structures and patterns within datasets. For instance, PCA can help detect groupings of vegetation types or ecotones in the dataset being analyzed. The classification of vegetation into distinct types or ecotones is a common practice in ecology because generalizations and groupings facilitate upscaling and the application of ecological insights across broader contexts.

However, determining clearly distinguishable vegetation types is challenging due to the gradient-like nature of ecological factors influencing plant species’ distributions, occurrences, and ranges and their abiotic drivers, not to mention biotic interactions that may influence these patterns (such as plant-plant competition and symbiotic requirements of some plants). These factors create transitional zones or intermediate types, making it difficult to delineate distinct groups. This is where PCA proves particularly valuable: it provides a means to visualize and understand relative differences between plots (or other units of analysis) in terms of species composition.

PCA additionally has applications in time series analysis, enabling comparisons over time. By doing the PCA scores/positions of plots (units surveyed) on repeat survey data, researchers can assess changes in species composition or abiotic variables. This capability makes PCA a powerful tool for understanding temporal dynamics in ecological datasets.

{{< pagebreak >}}

# Description of data

The data process in the following report was collected in Kangerluasunnguaq (Kobbefjord, Nuuk) in Southeast Greenland in 2024. The data was collected in 100 plots placed in an area of interest of aproxemately 12 km^2^ by randomised stratified sampling. Stratification was based on elevation (5 bins) and NDVI (4 bins).

Within each circular plot of 1 m^2^ the abundance and maximum height of all vascular plant species was recorded. Abundance was assessed by means of the well known Braun-Blanquet scale (8 step version). Abundance was assessed for bryophytes and lichens collectively as well.

In all plots soil temperature, soil moisture, and general vegetation height, was measured as well. Soil temperature was measured with a generic thermometer (°C, 4 measurements, mean calculated). Soil moisture was measured with a ThetaProbe (% water content, 4 measurements, mean calculated). General vegetation height was measured with a generic ruler (cm, 4 measurements, mean calculated)

The final processed data contains data from 100 plots and 72 species of vascular plants.

```{r}
#| label: import-data
#| echo: false

stat_mappingplants <- readRDS("~/Library/CloudStorage/OneDrive-Aarhusuniversitet/MappingPlants/admin/courses/2025 01 Applied statistics and R/dtu_applied_stat_R/data/stat_mappingplants.rds")

stat_mappingplants$taxon <- as.factor(stat_mappingplants$taxon)

str(stat_mappingplants)
```

{{< pagebreak >}}

# Scientific question

To keep the focus on the application on PCA in a ecologogical case based setting the following reserach question is sought to answered: 
-   Can PCA reveal structures or groupings in the collected data based the abundance of different plant species?

    -   If so, what do these structures indicate?

# Statistical analyses

PCA is a commonly used method in ecology and vegetation science to aid in classification of vegetation structures. This is due to the advantages of

## results

## Discussion



Assumed model

assumption

evaluation

• Statistical analyses

• results


## PCA all data

Can causes the plots to be most different? With 73 taxa and the abundance of bare ground, bryophytes and lichen, what abundances are most nessesary to describe the differences of the plots. Some occurrences might be redundant in eplaining the variation between plots.

If the combination of characteristics

What causes wines to be different? • With the 13 characteristics, we can distinguish wines through differences in the charateristics. But are all 13 characteristics necessary? Some may be redundant. • If we can identify scales (linear combinations of the characteristics) where the characteristics vary the most, we can also find a scale that differentiates optimally between the wines.

```{r}
#| label: select_cols_list_function
#| echo: false
#| output: false

select_cols_list <- function(df) {
  column_list <- colnames(df)
  column_string <- paste(column_list, collapse = ",\n")
  cat(column_string, "\n")
  invisible(column_string)
}
```

```{r}
#| label: pca-data-prepping
#| echo: false
#| output: false

library(tidyverse)
library(janitor)

wide_data <- stat_mappingplants[-c(590, 288), ] |> 
  filter(rowid < 102) |> 
  pivot_wider(id_cols = plot_name, names_from = taxon, values_from = bb_num) |> 
  clean_names()

wide_data2 <- wide_data |> 
  mutate(across(-1, ~ as.numeric(as.character(.)))) |> 
  mutate(across(-1, ~ replace_na(., 0))) |> 
  filter(plot_name != "")

plot_attributes <- stat_mappingplants |> 
  group_by(plot_name) |> 
  summarise(soil_moisture = mean(mean_soil_moisture) ) |> 
  filter(plot_name != "")

wide_data2$plot_name <- as.factor(wide_data2$plot_name)
str(wide_data2)

plot_attributes$plot_name <- as.factor(plot_attributes$plot_name)

wide_data2_ <- wide_data2 |> 
  left_join(plot_attributes, by = "plot_name")

quantile(wide_data2_$soil_moisture,probs=seq(0,1,by=0.33333),type=2)

wide_data2_$soil_moisture_group <- cut(wide_data2_$soil_moisture,
breaks = c(-Inf,15.07, 25.18, Inf), labels = c("low", "medium", "high"))

str(wide_data2)

sum(is.na(wide_data2))

#pca_stat <- wide_data2[,-1 ]

pca_stat <- wide_data2_[, !(names(wide_data2_) %in% c("plot_name", "phleum_commutatum"))]

pca_stat <- pca_stat[,1:76]

columns_with_one_observation <- as.data.frame(colSums(pca_stat > 0))

quantile(wide_data2$soil_moisture,probs=seq(0,1,by=0.1),type=2)

wide_data2

#select_cols_list(wide_data)

str(wide_data2)


```

```{r}
#| label: pca-data-calc
#| echo: true
#| output: true

library(remotes)
#install_github("rwehrens/ChemometricsWithR")
library(ChemometricsWithR)

mp.PC<- PCA(scale(pca_stat))
names(mp.PC)
summary(mp.PC)

head(mp.PC$loadings,n=3)

view(columns_with_one_observation)

loadings(pca.1)
```

```{}
```

```{r}
#| label: pca-intro-test
#| echo: false
#| output: false
#| include: false
#| results: "hide"

X<-var(scale(pca_stat))
T<-eigen(X)$vectors
sum(is.na(X))
```

```{r}
#| label: pca-x-t-eigenvalues-12
#| code-fold: true
#| echo: false
#| output: false
#| include: false


head(T,n=3)
Lambda<-t(T)%*%X%*%T
round(Lambda, digits=3)

```

```{r}
#| label: pca-x-t-eigenvalues-13
#| code-fold: true
#| echo: false
#| output: false
#| include: false

head(T,n=3)
Lambda<-t(T)%*%X%*%T
round(Lambda, digits=3)
T[,1]
round(T[,1],digits=2) #Thus the most varying combination of the scaled data is this
sum(diag(Lambda))
```

```{r}

#| label: plot-percentage-variance-unexplained
#| echo: false
#| out-width: 100%

par(cex.axis = 0.8, cex.lab = 0.8)
plot(100*(77-cumsum(diag(Lambda)))/77,type="b",
main="Percentage Variance Unexplained",
xlab='Number of eigenvectors included',
ylab='Percentage of total variance',
 cex.axis = 0.5) # Reduce size of axis text)
#abline(h = 20, col = "darkgreen") 
abline(h = 10, col = "darkgreen") 
abline(v = 37, col = "darkgreen") 
grid(nx = NULL, ny = NULL,
     lty = 2,      # Grid line type
     col = "gray", # Grid line color
     lwd = 1)      # Grid line width
```

```{r}
#| label: pca-plotting
#| code-fold: true
#| echo: false
#| output: true
#| include: true
#| out-width: 100%


library(SIBER)

par(cex.axis = 1, cex.lab = 1)
par(mfrow=c(1,1))
par(mgp = c(2, 0.5, 0))
#par(mar = c(4, 1, 1, 1))
par(cex.axis = 0.4, cex.lab = 0.4)
plot_names <- levels(as.factor(wide_data2$plot_name))

scoreplot(mp.PC, cex.axis = 0.7, pch = 1, lwd=0.8, col = soil_moisture_groups, elipse = TRUE)
title(line= -1)
#xis(tck=-0.05)
#text(mp.PC$scores[,1], mp.PC$scores[,2], pos=2, cex=0.7, labels=)
mu <- colMeans(mp.PC)  # Replace with group-specific means if needed
sigma <- cov(mp.PC)    # Replace with group-specific covariance if needed


## check the individual extreme values of the 'extreme' plots
#to add the plot names: labels=plot_names add in text function

```

```{r}
#| label: pca-x-t-eigenvalues-2
#| echo: false
#| out-width: 100%

par(mfrow = c(1,1),oma = c(0, 0, 0, 0), mar = c(4, 4, 4, 4))
par(mfrow=c(1,1))
par(cex.axis = 0.5, cex.lab = 0.5)
loadingplot(mp.PC, show.names= TRUE, cex.axis = 0.3, cex=0.1)
```


```{r}
#| label: pca-x-t-eigenvalues
#| echo: false
#| fig-width: 6
#| fig-height: 4
#| out-width: 100%

par(cex.axis = 0.5, cex.lab = 0.5)
biplot(prcomp(scale(mp.PC)), groups = soil_moisture_groups, show.names = "loadings", pch = 16,  cex.lab = 0.5, elipse = TRUE)

#ggbiplot(prcomp(scale(wines)),groups=vintages,ellipse=T)

#legend("bottomright",levels(vintages), col=1:3,pch=1:3)
```



```{r}
#| label: pca-x-t-eigenvalues-3
#| echo: false

library(chemometrics)
mp.PCA.prin <- princomp(pca_stat, cor = TRUE)
res <- pcaDiagplot(pca_stat, mp.PCA.prin, a=37)

par(mfrow=c(1,1))
plot(res$SDist, res$ODist, type="n")
text(res$SDist, res$ODist, labels=as.character(1:nrow(as.data.frame(res$ODist))))
abline(h = 3)
abline(v = 5)
```

## PCA only vegetated data

```{r}

#| label: pca-data-prepping-veg
#| echo: false
#| output: false
#| 

wide_data <- stat_mappingplants[-c(590, 288), ] |> 
  filter(rowid < 102) |> 
  pivot_wider(id_cols = plot_name, names_from = taxon, values_from = bb_num) |> 
  clean_names()

wide_data2_veg <- wide_data |> 
  mutate(across(-1, ~ as.numeric(as.character(.)))) |> 
  mutate(across(-1, ~ replace_na(., 0))) |> 
  filter(plot_name != "",
         bareground < 50)

row.names(wide_data2_veg) <- wide_data2_veg$plot_name

pca_stat_veg <- wide_data2_veg[, !(names(wide_data2_veg) %in% c("plot_name", "phleum_commutatum"))]

row.names(pca_stat_veg) <- wide_data2_veg$plot_name  

pca_stat_veg <- pca_stat_veg[, colSums(pca_stat_veg) != 0]
str(pca_stat_veg)

summary(pca_stat_veg)
sum(is.na(pca_stat_veg))

```


```{r}
#| label: pca-data-calc-veg
#| echo: true
#| output: true

library(remotes)
#install_github("rwehrens/ChemometricsWithR")
library(ChemometricsWithR)
mp.PC.veg<- PCA(scale(pca_stat_veg))
names(mp.PC.veg)
summary(mp.PC.veg)

summary(pca_stat_veg)

head(pca_stat_veg)

head(mp.PC.veg$loadings,n=3)
```

```{r}
#| label: pca-intro-test-veg
#| echo: false
#| output: false
#| include: false
#| results: "hide"

X.veg<-var(scale(pca_stat_veg))
T.veg<-eigen(X.veg)$vectors
sum(is.na(X.veg))
```

```{r}
#| label: pca-x-t-eigenvalues-12-veg
#| code-fold: true
#| echo: false
#| output: false
#| include: false


head(T.veg,n=3)
Lambda.veg<-t(T.veg)%*%X.veg%*%T.veg
round(Lambda.veg, digits=3)

```

```{r}
#| label: pca-x-t-eigenvalues-13-veg
#| code-fold: true
#| echo: false
#| output: false
#| include: false

head(T.veg,n=3)
Lambda.veg<-t(T.veg)%*%X.veg%*%T.veg
round(Lambda.veg, digits=3)
T.veg[,1]
round(T.veg[,1],digits=2)
sum(diag(Lambda.veg))
```
```{r}

#| label: plot-percentage-variance-unexplained-veg
#| echo: false
#| out-width: 100%

par(cex.axis = 0.5, cex.lab = 0.5)
plot(100*(73-cumsum(diag(Lambda.veg)))/73,type="b",
main="Percentage Variance Unexplained",
xlab='Number of eigenvectors included',
ylab='Percentage of total variance',
 cex.axis = 0.5) # Reduce size of axis text)
abline(h = 20, col = "darkgreen") 
abline(h = 60, col = "darkgreen") 
abline(v = 8.5, col = "darkgreen") 
grid(nx = NULL, ny = NULL,
     lty = 2,      # Grid line type
     col = "gray", # Grid line color
     lwd = 1)      # Grid line width
```


```{r}
#| label: pca-plotting-veg
#| code-fold: true
#| echo: false
#| output: true
#| include: true
#| fig-width: 6
#| fig-height: 6
##| out-width: 100%

par(cex.axis = 0.5, cex.lab = 0.5)
par(mfrow=c(1,1))
par(mgp = c(2, 0.5, 0))
#par(mar = c(4, 1, 1, 1))
par(cex.axis = 0.4, cex.lab = 0.4)
plot_names_veg <- levels(as.factor(wide_data2_veg$plot_name))

scoreplot(mp.PC.veg, cex.axis = 0.7, pch = 1, lwd=0.1)
title(line= -1)
#xis(tck=-0.05)
text(mp.PC.veg$scores[,1], mp.PC.veg$scores[,2], pos=2, cex=0.7, labels = "")


## check the individual extreme values of the 'extreme' plots
#to add the plot names: labels=plot_names add in text function labels=plot_names_veg

```

## PCA only veg with ggplot

```{r}

#| label: pca-plotting-ggplot
#| code-fold: true
#| echo: false
#| output: true
#| include: true
#| out-width: 100%


# X <- scale(pca_stat_veg)
# pca_stat_veg_ggplot <- PCA(X)
# 
# pca_stat_veg_ggplot
# 
# # Extract scores
# scores <- as.data.frame(pca_stat_veg_ggplot$scores)
# scores$plots <- row.names(pca_stat_veg)
# 
# # Extract loadings
# loadings <- as.data.frame(pca_stat_veg_ggplot$loadings)
# loadings$taxon <- rownames(loadings)
# 
# pca_summary_veg <- as.data.frame(summary(pca_stat_veg_ggplot))
# 
# 
# #library("devtools")
# #install_github("kassambara/factoextra")
# 
# library("factoextra")
# get_pca(res.pca, element = c("var", "ind"))
# 
# # Calculate variance explained
# eigenvals <- pca_stat_veg_ggplot@var
# var_percent <- (eigenvals/sum(eigenvals)) * 100
# 
# # Score plot showing plot distribution
# ggplot(scores, aes(x = `PC 1`, y = `PC2`)) +
#   geom_point(size = 3) +
#   geom_text(aes(label = Plot_ID), vjust = -0.5, size = 3) +
#   theme_minimal() +
#   labs(title = "PCA Score Plot of Vegetation Plots",
#        x = paste0("PC1 (", round(pca_stat_veg_ggplot@R2[1]*100, 1), "%)"),
#        y = paste0("PC2 (", round(pca_stat_veg_ggplot@R2[2]*100, 1), "%)"))
# 
# # Species loading plot
# ggplot(loadings, aes(x = PC1, y = PC2)) +
#   geom_segment(aes(x = 0, y = 0, xend = PC1, yend = PC2), 
#               arrow = arrow(length = unit(0.2, "cm"))) +
#   geom_text(aes(label = Species), size = 3, vjust = 1) +
#   coord_fixed() +
#   theme_minimal() +
#   labs(title = "Species Contributions to PCA Components")

```


```{r}
#| label: pca-plotting-ggplot
#| code-fold: true
#| echo: false
#| output: true
#| include: true
# ggplot() +
#   geom_point(data = scores, aes(x = PC1, y = PC2, color = Species), size = 3) +
#   geom_segment(data = loadings, aes(x = 0, y = 0, xend = PC1*5, yend = PC2*5),
#                arrow = arrow(length = unit(0.2, "cm")), color = "red") +
#   geom_text(data = loadings, aes(x = PC1*5, y = PC2*5, label = Variable),
#             color = "red", vjust = 1) +
#   coord_fixed() +
#   theme_minimal() +
#   labs(title = "PCA Biplot",
#        x = paste0("PC1 (", round(iris_pca@R2[1]*100, 1), "%)"),
#        y = paste0("PC2 (", round(iris_pca@R2[2]*100, 1), "%)")) 

```



# Conclusion

# Appendix

```{r}
taxon_counts <- table(stat_mappingplants$taxon)

# Convert to a data frame for easier manipulation
taxon_summary <- data.frame(
  Taxon = names(taxon_counts),
  Count = as.vector(taxon_counts)
)

taxon_summary <- taxon_summary[order(-taxon_summary$Count), ]

```

```{r}
#| label: taxon-counts-summary
#| echo: false
#| output: false
#| include: false
#| results: "hide"

# Count the occurrences of each taxon
taxon_counts <- table(stat_mappingplants$taxon)

# Get the names of taxons with more than 10 observations
frequent_taxons <- as.data.frame(names(taxon_counts[taxon_counts > 10]))

# Filter the dataset
filtered_df <- stat_mappingplants[stat_mappingplants$taxon %in% frequent_taxons, ]

```

## The client

The client, i.e. the receiver, of this report is my future self. I have basic understanding of statistics, statistical methods, and want to further my expertise in this areas both to explore the data I collect and have available as well as to document known phenomena of this same data. I have advance knowledge in biology and ecology. I do not have extensive of intuitive understanding of statistics and this report is aimed at document the learning outcomes of the data processing with the purpose of statistical reporting.

It is my interest to gain an applied and hand on approach to statistics, answer the reserach question at hand, explore the data I have collected

-   What does the client already know? (basic/advanced science on the subject, statistical methods, project circumstances)

-   What does the client not know? (basic/advanced science on the subject, statistical methods, project circumstances)

-   What is the interest of the Client? (research question, p-values, effect parameters, issues with data handling)

-   What is NOT the interest of the Client? (R code, issues with data handling, intermediate analyses)

-   Adapt the contents and structure (not the results though ) to fit the knowledge and interests of the Client.
